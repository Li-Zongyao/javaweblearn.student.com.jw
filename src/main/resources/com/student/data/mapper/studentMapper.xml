<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.student.data.dao.StudentDao">

    <resultMap type="com.student.data.model.student.Student" id="studentMap">
        <id property="username" column="id" />
        <result property="password" column="password" />
        <result property="name" column="name" />
        <result property="sex" column="sex" />
        <result property="birthday" column="birthday" />
        <result property="grade" column="grade" />
        <result property="major" column="major" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
        <result property="wechat" column="wechat" />
        <result property="qq" column="qq" />
        <result property="notes" column="notes" />
        <result property="createDate" column="createdate" />
    </resultMap>


    <resultMap type="Integer" id="studentCount">
        <id property="total" column="tt" />
    </resultMap>

    <select id="getStudentCount" parameterType="Map" resultMap="studentCount">
        select COUNT(id) as tt from  `student`
        <where>
            <choose>
                <when test="filter!=''">
                    ${filter}
                </when>
                <otherwise>
                    <if test="search!=''">
                        ${search}
                    </if>
                </otherwise>
            </choose>
        </where>
    </select>


    <select id="getStudent" parameterType="Map" resultMap="studentMap">
        select id,password,`name`,sex,birthday,grade,major,phone,email,wechat,qq,notes,cdate
        from   `student`
        where  id = '${username}' and password = '${password}'
    </select>

    <select id="getStudentList" parameterType="String" resultMap="studentMap">
        select id,password,`name`,sex,birthday,grade,major,phone,email,wechat,qq,notes,cdate
        from   `student`

    </select>

    <insert id="insertStudent" parameterType="Map">
        insert into `student` ( id,password,name,email,sex )
        values ('${username}','${password}','${name}','${email}','${sex}')
    </insert>

    <update id="editStudent" parameterType="Map">
        update `student` set name='${name}',email='${email}',sex='${sex}',password='${password}'
        where id='${username}'
    </update>

    <delete id="deleteStudent" parameterType="String">
        delete from `student` where id='${id}'
    </delete>

    <!--

    <select id="getUserById" parameterType="String" resultMap="userMap">
        select username,password,name,actor,email,enable,profile,createdate
        from   `login_user`
        where  username = '${username}'
    </select>

    -->
</mapper>


